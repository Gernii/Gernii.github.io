{"version":3,"sources":["Handler/GetMDData.jsx","assets/markdown/MarkDown.js","assets/markdown/nlu.md","assets/markdown/speech.md","assets/markdown/convai.md","MarkMapView/ShowMarkMap.jsx","GUI/GUIViewer.jsx","Handler/FetchResize.jsx","GUI/GUIView/RadioInput.jsx","GUI/GUIButton/ShowAndHideBth.jsx","index.js"],"names":["GetMDData","source","useState","content","setContent","data","a","fetch","then","res","text","md","useEffect","fetchMyData","markmap","id","name","fileSource","ShowMarkMap","markDown","option","FetchResize","ref","useRef","current","innerHTML","root","Transformer","transform","Markmap","create","GUIViewer","checked","onChange","className","map","value","label","setter","height","window","innerHeight","width","innerWidth","dimensions","setDimensions","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","debounce","console","log","addEventListener","removeEventListener","RadioInput","type","ShowAndHideBtn","htmlFor","Root","setChecked","autoFit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4c2e00a.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {FetchResize} from '../assets/FunctionStorage'\r\nfunction GetMDData(source) {\r\n    // const[dimensions, setDimensions]=useState(window.innerWidth)\r\n    // let fet = FetchResize()\r\n    // if (fet != dimensions){\r\n    //     setDimensions(fet)\r\n    // }\r\n    \r\n    const [content, setContent] = useState();\r\n    useEffect(() => {\r\n        fetchMyData(source)\r\n    }, [source])\r\n    async function fetchMyData(data){\r\n        await fetch(data)\r\n            .then((res) => res.text())\r\n            .then((md) => {\r\n                setContent(md)\r\n            })\r\n    }\r\n    return content\r\n}\r\n\r\nexport default GetMDData","import nlu from './nlu.md'\r\nimport speech from './speech.md'\r\nimport convai from './convai.md'\r\nexport const markmap = [{\r\n        id: 0,\r\n        name: 'NLU',\r\n        fileSource: nlu,\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'Speech',\r\n        fileSource: speech,\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Convai',\r\n        fileSource: convai,\r\n    }\r\n]","export default __webpack_public_path__ + \"static/media/nlu.e4ed9f70.md\";","export default __webpack_public_path__ + \"static/media/speech.3f919d53.md\";","export default __webpack_public_path__ + \"static/media/convai.31d6cfe0.md\";","import { useEffect, useRef } from \"react\"\r\nimport {Transformer} from 'markmap-lib'\r\nimport {Markmap} from 'markmap-view'\r\nimport {FetchResize} from '../assets/FunctionStorage'\r\nfunction ShowMarkMap({markDown, option}){\r\n  let screenSize = FetchResize()\r\n  if (screenSize <= 480){\r\n    option = null\r\n  }\r\n  const ref = useRef(null);\r\n  useEffect(() => {\r\n      ref.current.innerHTML = \"\";\r\n      const transformer = new Transformer()\r\n      const { root} = transformer.transform(markDown)\r\n      Markmap.create('#mindmap', option, root)\r\n  }, [markDown, option])\r\n  return <svg ref={ref} id = {\"mindmap\"}> </svg>\r\n}\r\n\r\nexport default ShowMarkMap","import {RadioInput, ShowAndHideBtn, markmap} from \"../assets/FunctionStorage\"\r\n\r\nconst GUIViewer = ({checked, onChange}) => {\r\n  return (\r\n    <>\r\n      <ShowAndHideBtn />\r\n      <div className='sidebar'>\r\n        <header>MODEL</header>\r\n        <ul className='submenu'>\r\n        {\r\n          markmap.map(value => {\r\n            return <RadioInput label={value.name} value={value.id} checked={checked} setter={onChange}/>\r\n          })\r\n        }\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GUIViewer","import { useEffect, useState } from 'react'\r\nconst debounce = (fn, ms) => {\r\n  let timer\r\n  return _ => {\r\n    clearTimeout(timer)\r\n    timer = setTimeout(_ => {\r\n      timer = null\r\n      fn.apply(this)\r\n    }, ms)\r\n  };\r\n}\r\nconst FetchResize = () => {\r\n  const[dimensions, setDimensions]=useState({ \r\n    height: window.innerHeight,\r\n    width: window.innerWidth\r\n  })\r\n  useEffect(() => {\r\n    const debouncedHandleResize = debounce(function handleResize() {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth\r\n      })\r\n      console.log(\"3\");\r\n    }, 1000)\r\n    window.addEventListener('resize', debouncedHandleResize)\r\n    return _ => {\r\n      window.removeEventListener('resize', debouncedHandleResize)\r\n    }\r\n  }, [dimensions.width])\r\n  console.log(dimensions.width);\r\n  return dimensions.width\r\n}\r\nexport default FetchResize","const RadioInput = ({label, value, checked, setter}) => {\r\n\treturn (\r\n\t\t<li>\r\n\t  <label>\r\n\t    <input \r\n\t\t\t \tid='check'\r\n\t\t\t\ttype=\"radio\" \r\n\t\t\t\tchecked={checked == value}\r\n\t      onChange={() => setter(value)} \r\n\t\t\t/>\r\n\t    <span>{label}</span>\r\n\t  </label>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default RadioInput","import {BiMenu, BiChevronLeft} from 'react-icons/bi'\r\nconst ShowAndHideBtn = () => {\r\n  return (\r\n      <>\r\n        <input type=\"checkbox\" id=\"check\" />\r\n        <label htmlFor='check'>\r\n          <BiChevronLeft  className='bx-arrow-back' id='back'  />\r\n          <BiMenu className='bx-menu' id='btn' />\r\n        </label>\r\n\r\n      </>\r\n  )\r\n}\r\n\r\nexport default ShowAndHideBtn\r\n","import { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {markmap, ShowMarkMap, GUIViewer, GetMDData} from './assets/FunctionStorage';\nfunction Root() {\n    const [checked, setChecked] = useState(0)\n    let markDown = GetMDData(markmap[checked].fileSource)\n    console.log(checked)\n    return (\n        <div> \n          <GUIViewer checked={checked} onChange={setChecked} />\n          <ShowMarkMap markDown={markDown} option={{autoFit: true}}/>\n        </div>\n    );\n}\n\nReactDOM.render(<Root/>, document.getElementById('root'));"],"sourceRoot":""}